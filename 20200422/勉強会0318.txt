●いつやるか？
2020/03/18(wed.) 16:00～
資料：03/13(fri.)

●なにやるか？
テスト 第3回 UIの自動テストを考えてみましょう
・UIの自動テストを行う前に知っておくべきこと	中野
25分
・Seleniumを使ったUIの自動テスト	渡辺
25分
そのへん






■シナリオについて
GUI（画面）を自動テストしましょう

１●はじめに
何回かお話ししたことがあるかとは思いますが、
私自身、まともにシステム開発の仕事をするようになって、高々5～6年です。
なので、GUIの自動テストっていうことも、やったことありません。

なので、調べてみました。
どんな仕組みで実行されるの？
どんなツールがあるの？
どんな事ができるの？できないの？
メリット、デメリットは？


２●仕組みについて
仕組みを知る前に、歴史から紐解きました。
GUIアプリケーションという概念が一般的に広まったのが、日本ではWindows95以降になりますので、
（Win95よりももっともっと前からGUIはあったが）
90年代後半くらいから、GUIを自動テストするような考え方がありました。

私が覚えているものに、「Microsoft VisualTest」というのがあります。
考え方は今と同じで、あらかじめ「決められた手順」をプログラミングしておいて、
それを実行するというものです。
ただ、GUIということで、画面の操作を表現するために、当時は「座標」を指定していました。
あの頃は画期的だと思ったのですが、画面のデザインが変わると簡単に破綻してしまいました。
また、処理タイミングのコントロールが難しかったり、意図しないウィンドウが上に重なってると
処理が止まってしまったりと、痒いところになかなか手が届かない仕様でした。

数時間おきに実行する定型業務を自動化したまでは良かったのですが、
前述のとおり、簡単に止まってしまう残念仕様だったので、
結局、ちゃんと自動処理が動いているか人間が確認する、みたいな、
笑えない運用をやってた覚えがあります。

現在は、そんな問題はちゃんと改善されており、
正確に、実行させたい手続きをプログラミングしておくことが可能です。
座標指定ではなく、Web画面ならDomのように、オブジェクトとして一意のIDを
指定し、それに対して目的の処理を行わせる。
そうすると、なにかしらの反応があるはずなので、それが期待する結果と一致するか突合させ、
マッチしてればOK、というような流れで、GUIの自動テストはすすみます。




ツールについて
現在は、GUIの自動テストなら「Selenium」というくらい、
デファクトスタンダードです。
実は「Selenium」にも様々な形態があって、渡辺さんの内容とも重複するかもしれませんが、
ブラウザのアドオンとして提供されていたりもします（IDE）。

・Cypress　画面特化型のGUIテストツール
・TestCafe　Node.jsで提供されるGUIテストツール
・Puppeteer　
上記はいずれも、JavaScriptで書く必要がある
Seleniumは、Java、Python、Ruby、PHP、JavaScript　いろいろな言語で書ける





３●出来ることについて
できる事
・Web画面の操作は可能
・認証があるケース
・cookieの操作が必要となる場合
・sessionが存在する場合
・非同期（Ajax）のテスト


出来ない事
・画面の崩れ（ブラウズしてみないと分からない、ブラウザにより微妙に異なる）
・操作感（タイピングにディレイを感じる、サジェストの動きが好きでない）


メリットデメリット
・再帰的なテストが実行できる

・見た目、操作した結果、「人間が感じる部分」のテストは苦手である


これからのGUI自動テスト
・キーワード駆動型
→Excelなどで記入しておいた、自然なテスト仕様書

余談ですが、最近ではAIを用いてGUIの変更点を自動検出し、
テストコードに反映させてくれるツールも出てきたようです
→「Autify」


４●まとめ


繰り返しになりますが、GUIのテストに限らず、
「テストの自動化」というのは、「再帰的なテスト実行」という考え方に繋がります。
それはつまり、ソフトウェアの柔軟性が高まる、ということなのです。
そして、突き詰めれば、ビジネスのスピード、継続的進化というところ、
すなわち、いま業界を賑わしているワードであるところの「DX」に帰結します。

もう一つ、GUIのテストに限っていうならば、
これはRPAの考え方にも通じるものです。
定型的な業務は、どんどんロボットに置き換えて、
人間はもっともっと付加価値の高いビジネスを行うべき、
というのが、RPAの根底にある考え方なので、
やはり、我々がGUIの自動テストというエッセンスを学ぶことは、
NACHIの業務改革に必ず繋がっていくものである、と思うのです。


今回はあまり良い締め文句が思いつきませんでした。
マーヴェラスなロボティクスライフを実現させましょう。


